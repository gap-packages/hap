  
  [1X14 Cocycles[0X
  
  ::::::::::::::::::::::::
  [10XCcGroup(A,f) [0m
  
  Inputs a G-module A (i.e. an abelian G-outer group) and a standard 2-cocycle
  f  G  x  G ---> A. It returns the extension group determined by the cocycle.
  The group is returned as a CcGroup.
  
  This  is  a  HAPcocyclic  function  and  thus only works when HAPcocyclic is
  loaded.
  ::::::::::::::::::::::::
  [10XCocycleCondition(R,n) [0m
  
  Inputs  a  resolution  R  and an integer n>0. It returns an integer matrix M
  with  the  following  property.  Suppose d=R.dimension(n). An integer vector
  f=[f_1, ... , f_d] then represents a ZG-homomorphism R_n --> Z_q which sends
  the  ith  generator  of  R_n to the integer f_i in the trivial ZG-module Z_q
  (where possibly q=0 ). The homomorphism f is a cocycle if and only if M^tf=0
  mod q.
  ::::::::::::::::::::::::
  [10XStandardCocycle(R,f,n) [0m
  [10XStandardCocycle(R,f,n,q) [0m
  
  Inputs  a  ZG-resolution R (with contracting homotopy), a positive integer n
  and  an  integer vector f representing an n-cocycle R_n --> Z_q where G acts
  trivially  on  Z_q.  It  is assumed q=0 unless a value for q is entered. The
  command  returns  a  function F(g_1, ..., g_n) which is the standard cocycle
  G_n  -->  Z_q corresponding to f. At present the command is implemented only
  for n=2 or 3.
  ::::::::::::::::::::::::
  [10XSyzygy(R,g) [0m
  
  Inputs  a  ZG-resolution R (with contracting homotopy) and a list g = [g[1],
  ...,  g[n]]  of elements in G. It returns a word w in R_n. The word w is the
  image  of  the n-simplex in the standard bar resolution corresponding to the
  n-tuple  g.  This  function  can  be  used  to  construct  explicit standard
  n-cocycles. (Currently implemented only for n<4.)
  
