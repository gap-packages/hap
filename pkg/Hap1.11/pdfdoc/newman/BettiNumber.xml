<Verb>BettiNumber(K,n):: SimplicialComplex, Int --> Int</Verb> 
<Verb>BettiNumber(K,n):: PureCubicalComplex, Int --> Int</Verb> 
<Verb>BettiNumber(K,n):: CubicalComplex, Int --> Int</Verb>
<Verb>BettiNumber(K,n):: PurePermComplex, Int --> Int</Verb>
<Verb>BettiNumber(K,n):: RegCWComplex, Int --> Int</Verb>
<Verb>BettiNumber(K,n):: ChainComplex, Int --> Int</Verb>
<Verb>BettiNumber(K,n):: SparseChainComplex, Int --> Int</Verb>
<Verb>BettiNumber(K,n,p):: SimplicialComplex, Int, Int --> Int</Verb>
<Verb>BettiNumber(K,n,p):: PureCubicalComplex, Int, Int --> Int</Verb>
<Verb>BettiNumber(K,n,p):: CubicalComplex, Int, Int --> Int</Verb>
<Verb>BettiNumber(K,n,p):: PurePermComplex, Int, Int --> Int</Verb>
<Verb>BettiNumber(K,n,p):: RegCWComplex, Int, Int --> Int</Verb>




<P/>Inputs a simplicial, cubical, pure cubical, pure permutahedral, 
regular CW, chain or sparse chain complex  
<M>K</M> together with an integer <M>n \ge 0</M> and returns the <M>n</M>th 
Betti number of <M>K</M>.

<P/>Inputs a simplicial, cubical, pure cubical,  pure permutahedral or
 regular CW-complex 
<M>K</M> together with an integer <M>n \ge 0</M> and a prime <M>p \ge 0</M> or 
<M>p=0</M>. In this case  the <M>n</M>th
Betti number of <M>K</M> over a field of characteristic <M>p</M> is returned.



