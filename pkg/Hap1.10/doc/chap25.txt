  
  [1X25 Arrays and Pseudo lists[0X
  
  ::::::::::::::::::::::::
  [10XArray(A,f)[0m
  
  Inputs  an  array  A  and a function f. It returns the the array obtained by
  applying f to each entry of A (and leaves A unchanged).
  ::::::::::::::::::::::::
  [10XPermuteArray(A,f)[0m
  
  Inputs an array A of dimension d and a permutation f of degree at most d. It
  returns the array B defined by B[i1][i2]...[id] = A[f(i1)][f(i2)]...A[f(id)]
  (and leaves A unchanged).
  ::::::::::::::::::::::::
  [10XArrayDimension(A)[0m
  
  Inputs an array A and returns its dimension.
  ::::::::::::::::::::::::
  [10XArrayDimensions(A)[0m
  
  Inputs an array A and returns its dimensions.
  ::::::::::::::::::::::::
  [10XArraySum(A)[0m
  
  Inputs an array A and returns the sum of its entries.
  ::::::::::::::::::::::::
  [10XArrayValue(A,x)[0m
  
  Inputs  an  array  A  and a coordinate vector x. It returns the value of the
  entry in A with coordinate x.
  ::::::::::::::::::::::::
  [10XArrayValueFunctions(d)[0m
  
  Inputs a positive integer d and returns an efficient version of the function
  ArrayValue for arrays of dimension d.
  ::::::::::::::::::::::::
  [10XArrayAssign(A,x,n)[0m
  
  Inputs  an  array  A and a coordinate vector x and an integer n. It sets the
  entry of A with coordinate x equal to n.
  ::::::::::::::::::::::::
  [10XArrayAssignFunctions(d)[0m
  
  Inputs a positive integer d and returns an efficient version of the function
  ArrayAssign for arrays of dimension d.
  ::::::::::::::::::::::::
  [10XArrayIterate(d)[0m
  
  Inputs  a  positive  integer d and returns a function ArrayIt(Dimensions,f).
  This  function  inputs  a  list Dimensions of d positive integers and also a
  function f(x). It applies the function f(x) to each integer list x of length
  d with entries x[i] in the range [1..Dimension[i]].
  ::::::::::::::::::::::::
  [10XBinaryArrayToTextFile(file,A)[0m
  
  Inputs  a  string containing the address of a file, and an array A of 0s and
  1s.  The  array  represents a pure cubical complex. A representation of this
  complex  is  written  to  the  file in a format that can be read by the CAPD
  (Computer  Assisted  Proofs in Dynamics) software developed by Marian Mrozek
  and others.
  
  The second input A can also be a pure cubical complex.
  ::::::::::::::::::::::::
  [10XFrameArray(A)[0m
  
  Inputs  an  array  A  and returns the array obtained by appending a 0 to the
  beginning and end of each "row" of the array.
  ::::::::::::::::::::::::
  [10XUnframeArray(A)[0m
  
  Inputs  an  array A and returns the array obtained by removing the first and
  last entry in each "row" of the array.
  ::::::::::::::::::::::::
  [10XAdd(L,x)[0m
  
  Let  L  be  a  pseudo  list of length n, and x an object compatible with the
  entries  in L. If x is not in L then this operation converts L into a pseudo
  list  of  length  n+1  by  adding  x  as  the  final entry. If x is in L the
  operation has no effect on L.
  ::::::::::::::::::::::::
  [10XAppend(L,K)[0m
  
  Let  L be a pseudo list and K a list whose objects are compatible with those
  in L. This operation applies Add(L,x) for each x in K.
  ::::::::::::::::::::::::
  [10XListToPseudoList(L)[0m
  
  Inputs a list L and returns the pseudo list representation of L.
  
