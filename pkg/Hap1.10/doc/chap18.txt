  
  [1X18 G-Outer Groups[0X
  
  ::::::::::::::::::::::::
  [10XGOuterGroup(E,N)[0m
  [10XGOuterGroup()[0m
  
  Inputs  a  group  E  and  normal subgroup N. It returns N as a G-outer group
  where G=E/N.
  
  The  function  can  be used without an argument. In this case an empty outer
  group  C  is returned. The components must be set using SetActingGroup(C,G),
  SetActedGroup(C,N) and SetOuterAction(C,alpha).
  ::::::::::::::::::::::::
  [10XGOuterGroupHomomorphismNC(A,B,phi)[0m
  [10XGOuterGroupHomomorphismNC()[0m
  
  Inputs  G-outer  groups  A  and  B  with  common  acting  group, and a group
  homomorphism   phi:ActedGroup(A)   -->   ActedGroup(B).   It   returns   the
  corresponding  G-outer  homomorphism  PHI:A--> B. No check is made to verify
  that phi is actually a group homomorphism which preserves the G-action.
  
  The  function  can  be used without an argument. In this case an empty outer
  group homomorphism PHI is returned. The components must then be set.
  ::::::::::::::::::::::::
  [10XGOuterHomomorphismTester(A,B,phi)[0m
  
  Inputs  G-outer  groups  A  and  B  with  common  acting  group, and a group
  homomorphism  phi:ActedGroup(A) --> ActedGroup(B). It tests whether phi is a
  group homomorphism which preserves the G-action.
  
  The  function  can  be used without an argument. In this case an empty outer
  group homomorphism PHI is returned. The components must then be set.
  ::::::::::::::::::::::::
  [10XCentre(A)[0m
  
  Inputs   G-outer   group  A  and  returns  the  group  theoretic  centre  of
  ActedGroup(A) as a G-outer group.
  ::::::::::::::::::::::::
  [10XDirectProductGog(A,B)[0m
  [10XDirectProductGog(Lst)[0m
  
  Inputs  G-outer  groups  A and B with common acting group, and returns their
  group-theoretic  direct  product as a G-outer group. The outer action on the
  direct product is the diagonal one.
  
  The function also applies to a list Lst of G-outer groups with common acting
  group.
  
  For  a  direct product D constructed using this function, the embeddings and
  projections  can  be  obtained  (as  G-outer  group homomorphisms) using the
  functions Embedding(D,i) and Projection(D,i).
  
