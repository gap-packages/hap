<Chapter><Heading> Knots and Links</Heading>

<Table Align="|l|" >

<Row>
<Item>
<Index>PureCubicalKnot</Index>
<C>PureCubicalKnot(L)</C>
<C>PureCubicalKnot(n,i)</C>
<P/>

Inputs a list <M>L=[[m1,n1], [m2,n2], ..., [mk,nk]]</M> of pairs of integers
 describing 
 a cubical arc presentation of a 
link with all vertical lines at the front and all horizontal lines at the back. The bottom horizontal line extends from the m1-th column to the n1-th column. 
The second to bottom horizontal line extends from the m2-th column to the n2-th column. And so on. The link is returned 
as a 3-dimensional pure cubical complex.
<P/>

Alternatively the function inputs two
integers <M>n</M>, <M>i</M> and returns the <M>i</M>-th prime knot on <M>n</M> crossings.

</Item>
</Row>

<Row>
<Item>
<Index>ViewPureCubicalKnot</Index>
<C>ViewPureCubicalKnot(L)</C>
<P/>

Inputs a pure cubical link <M>L</M> and displays it.
<P/>

</Item>
</Row>


<Row>
<Item>
<Index>KnotSum</Index>
<C>KnotSum(K,L)</C>
<P/>

Inputs two pure cubical knots <M>K</M>, <M>L</M> and returns their sum as a pure cubical knot. This function is not defined for links with more than one component.
<P/>

</Item>
</Row>

<Row>
<Item>
<Index>KnotGroup</Index>
<C>KnotGroup(K)</C>
<P/>

Inputs a pure cubical link <M>K</M> and returns the fundamental group of its complement. The group is returned as a finitely presented group.
<P/>

</Item>
</Row>

<Row>
<Item>
<Index>AlexanderMatrix</Index>
<C>AlexanderMatrix(G)</C>
<P/>

Inputs a finitely presented group <M>G</M> whose abelianization is infinite cyclic. It returns the Alexander matrix of the presentation. 
<P/>

</Item>
</Row>

<Row>
<Item>
<Index>AlexanderPolynomial</Index>
<C>AlexanderPolynomial(K)</C>
<C>AlexanderPolynomial(G)</C>
<P/>

Inputs either a pure cubical knot <M>K</M> or a finitely presented group <M>G</M> whose abelianization is infinite cyclic. The Alexander Polynomial is returned. 
<P/>

</Item>
</Row>


<Row>
<Item>
<Index>ProjectionOfPureCubicalComplex</Index>
<C>ProjectionOfPureCubicalComplex(K)</C>
<P/>

Inputs  an $n$-dimensional
 pure cubical complex <M>K</M> and returns an n-1-dimensional pure cubical complex K'. The returned complex is obtained by projecting Euclidean n-space onto Euclidean n-1-space. 
<P/>

</Item>
</Row>

<Row>
<Item>
<Index>ReadPDBfileAsPureCubicalComplex</Index>
<C>ReadPDBfileAsPureCubicalComplex(file)</C>
<C>ReadPDBfileAsPureCubicalComplex(file,m ,c)</C>
<P/>

Inputs  a protein database file describing a protein, and optionally
 inputs  a positive integer m and character string c. The default values for the optional inputs are m=5 and c="A".  
 It loads the chain of amino acids labelled by c in the file as a 3-dimensional pure cubical complex of the homotopy type of a circle. 
<P/>

It might happen that the function fails to construct a pure cubical complex of the homotopy type of a circle. In this case  retry with a larger integer m.

</Item>
</Row>




</Table>
</Chapter>


