<Chapter><Heading>Regular CW-Complexes</Heading>

<Section><Heading> &nbsp;</Heading>

<ManSection>

<Func Name="SimplicialComplexToRegularCWComplex" Arg="K"/>
<Description>

<P/>
Inputs a simplicial complex <M>K</M> and returns the corresponding regular CW-complex. 
<P/><B>Examples:</B> <URL><Link>../www/SideLinks/About/aboutMetrics.html</Link><LinkText>1</LinkText></URL>&nbsp;,
<URL><Link>../www/SideLinks/About/aboutRandomComplexes.html</Link><LinkText>2</LinkText></URL>&nbsp; 

</Description>





















































































</ManSection>

<ManSection>

<Func Name="CubicalComplexToRegularCWComplex" Arg="K"/>

<Func Name="CubicalComplexToRegularCWComplex" Arg="K,n"/>
<Description>

<P/>
Inputs a pure cubical complex (or cubical complex) <M>K</M> and returns the corresponding regular CW-complex. If a positive integer <M>n</M> is entered as an optional second argument, then just the <M>n</M>-skeleton of <M>K</M> is returned.
<P/><B>Examples:</B> <URL><Link>../www/SideLinks/About/aboutKnots.html</Link><LinkText>1</LinkText></URL>&nbsp; 

</Description>





















































































</ManSection>

<ManSection>

<Func Name="CriticalCellsOfRegularCWComplex" Arg="Y"/>

<Func Name="CriticalCellsOfRegularCWComplex" Arg="Y,n"/>
<Description>

<P/>
Inputs a  regular CW-complex <M>Y</M> and returns the critical cells of <M>Y</M> with respect to some discrete vector field. If <M>Y</M> does not initially have a discrete vector field then one is constructed.

<P/> If a positive integer <M>n</M> is given as a second optional input, then just the critical cells in dimensions up to and including <M>n</M> are returned.

<P/> The function <M>CriticalCellsOfRegularCWComplex(Y)</M> works by homotopy
reducing cells starting at the top dimension. The function <M>CriticalCellsOfRegularCWComplex(Y,n)</M> works by homotopy coreducing cells starting at  dimension 0. The two methods may well return different numbers of cells.
<P/><B>Examples:</B> <URL><Link>../www/SideLinks/About/aboutPeripheral.html</Link><LinkText>1</LinkText></URL>&nbsp;,
<URL><Link>../www/SideLinks/About/aboutRandomComplexes.html</Link><LinkText>2</LinkText></URL>&nbsp;,
<URL><Link>../www/SideLinks/About/aboutKnots.html</Link><LinkText>3</LinkText></URL>&nbsp; 

</Description>





















































































</ManSection>

<ManSection>

<Func Name="ChainComplex" Arg="Y"/>
<Description>

<P/>
Inputs a  regular CW-complex <M>Y</M> and returns the cellular chain complex of a CW-complex W whose cells correspond to the critical cells of <M>Y</M> with respect to some discrete vector field. If <M>Y</M> does not initially have a discrete vector field then one is constructed.
<P/><B>Examples:</B> <URL><Link>tutorial/chap1.html</Link><LinkText>1</LinkText></URL>&nbsp;,
<URL><Link>tutorial/chap3.html</Link><LinkText>2</LinkText></URL>&nbsp;,
<URL><Link>tutorial/chap9.html</Link><LinkText>3</LinkText></URL>&nbsp;,
<URL><Link>../www/SideLinks/About/aboutMetrics.html</Link><LinkText>4</LinkText></URL>&nbsp;,
<URL><Link>../www/SideLinks/About/aboutBredon.html</Link><LinkText>5</LinkText></URL>&nbsp;,
<URL><Link>../www/SideLinks/About/aboutPersistent.html</Link><LinkText>6</LinkText></URL>&nbsp;,
<URL><Link>../www/SideLinks/About/aboutCoveringSpaces.html</Link><LinkText>7</LinkText></URL>&nbsp;,
<URL><Link>../www/SideLinks/About/aboutCoverinSpaces.html</Link><LinkText>8</LinkText></URL>&nbsp;,
<URL><Link>../www/SideLinks/About/aboutCubical.html</Link><LinkText>9</LinkText></URL>&nbsp;,
<URL><Link>../www/SideLinks/About/aboutSimplicialGroups.html</Link><LinkText>10</LinkText></URL>&nbsp;,
<URL><Link>../www/SideLinks/About/aboutIntro.html</Link><LinkText>11</LinkText></URL>&nbsp; 

</Description>





















































































</ManSection>

<ManSection>

<Func Name="ChainComplexOfRegularCWComplex" Arg="Y"/>
<Description>

<P/>
Inputs a  regular CW-complex <M>Y</M> and returns the cellular chain complex of <M>Y</M>. 
<P/><B>Examples:</B> <URL><Link>tutorial/chap1.html</Link><LinkText>1</LinkText></URL>&nbsp; 

</Description>





















































































</ManSection>

<ManSection>

<Func Name="FundamentalGroup" Arg="Y"/>

<Func Name="FundamentalGroup" Arg="Y,n"/>
<Description>

<P/>
Inputs a  regular CW-complex <M>Y</M> and, optionally, the number of some 0-cell. It returns the fundamental group of <M>Y</M> based at the 0-cell <M>n</M>. The group is returned as a finitely presented group. If <M>n</M> is not specified then it is set <M>n=1</M>. The algorithm requires a discrete vector field on <M>Y</M>. If <M>Y</M> does not initially have a discrete vector field then one is constructed.

<P/><B>Examples:</B> <URL><Link>tutorial/chap1.html</Link><LinkText>1</LinkText></URL>&nbsp;,
<URL><Link>tutorial/chap2.html</Link><LinkText>2</LinkText></URL>&nbsp;,
<URL><Link>tutorial/chap3.html</Link><LinkText>3</LinkText></URL>&nbsp;,
<URL><Link>../www/SideLinks/About/aboutLinks.html</Link><LinkText>4</LinkText></URL>&nbsp;,
<URL><Link>../www/SideLinks/About/aboutPeripheral.html</Link><LinkText>5</LinkText></URL>&nbsp;,
<URL><Link>../www/SideLinks/About/aboutCoveringSpaces.html</Link><LinkText>6</LinkText></URL>&nbsp;,
<URL><Link>../www/SideLinks/About/aboutCoverinSpaces.html</Link><LinkText>7</LinkText></URL>&nbsp;,
<URL><Link>../www/SideLinks/About/aboutQuandles.html</Link><LinkText>8</LinkText></URL>&nbsp;,
<URL><Link>../www/SideLinks/About/aboutRandomComplexes.html</Link><LinkText>9</LinkText></URL>&nbsp;,
<URL><Link>../www/SideLinks/About/aboutKnots.html</Link><LinkText>10</LinkText></URL>&nbsp; 

</Description>





















































































</ManSection>

</Section>
</Chapter>

