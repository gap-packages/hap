<Chapter><Heading> Chain complexes</Heading>

<Section><Heading> &nbsp;</Heading>

<ManSection>

<Func Name="ChainComplex" Arg="T"/>
<Description>

<P/>
Inputs a  pure cubical complex, or cubical complex, or simplicial complex
 <M>T</M>
and returns the (often very large) cellular chain complex of <M>T</M>.
<P/><B>Examples:</B> <URL><Link>tutorial/chap1.html</Link><LinkText>1</LinkText></URL>&nbsp;,
<URL><Link>tutorial/chap3.html</Link><LinkText>2</LinkText></URL>&nbsp;,
<URL><Link>tutorial/chap9.html</Link><LinkText>3</LinkText></URL>&nbsp;,
<URL><Link>../www/SideLinks/About/aboutMetrics.html</Link><LinkText>4</LinkText></URL>&nbsp;,
<URL><Link>../www/SideLinks/About/aboutBredon.html</Link><LinkText>5</LinkText></URL>&nbsp;,
<URL><Link>../www/SideLinks/About/aboutPersistent.html</Link><LinkText>6</LinkText></URL>&nbsp;,
<URL><Link>../www/SideLinks/About/aboutCoveringSpaces.html</Link><LinkText>7</LinkText></URL>&nbsp;,
<URL><Link>../www/SideLinks/About/aboutCoverinSpaces.html</Link><LinkText>8</LinkText></URL>&nbsp;,
<URL><Link>../www/SideLinks/About/aboutCubical.html</Link><LinkText>9</LinkText></URL>&nbsp;,
<URL><Link>../www/SideLinks/About/aboutSimplicialGroups.html</Link><LinkText>10</LinkText></URL>&nbsp;,
<URL><Link>../www/SideLinks/About/aboutIntro.html</Link><LinkText>11</LinkText></URL>&nbsp; 

</Description>





















































































</ManSection>

<ManSection>

<Func Name="ChainComplexOfPair" Arg="T,S"/>
<Description>

<P/>
Inputs a  pure cubical complex or cubical complex <M>T</M> and contractible subcomplex <M>S</M>.
It returns the quotient <M>C(T)/C(S)</M> of cellular chain complexes.
<P/><B>Examples:</B> <URL><Link>../www/SideLinks/About/aboutCubical.html</Link><LinkText>1</LinkText></URL>&nbsp; 

</Description>





















































































</ManSection>

<ManSection>

<Func Name="ChevalleyEilenbergComplex" Arg="X,n"/>
<Description>
<P/>

Inputs either a Lie algebra <M>X=A</M> (over the ring of integers 
<M>Z</M> or over a field <M>K</M>) or a homomorphism of Lie algebras 
<M>X=(f:A
\longrightarrow
B)</M>, 
together with a positive integer <M>n</M>. 
It returns either the first <M>n</M> terms of the 
Chevalley-Eilenberg chain complex <M>C(A)</M>, 
or the induced map of Chevalley-Eilenberg complexes 
<M>C(f):C(A)
\longrightarrow C(B)</M>.
<P/>
(The homology of the Chevalley-Eilenberg complex <M>C(A)</M> is by 
definition the homology of the Lie algebra <M>A</M> 
with trivial coefficients in <M>Z</M> or <M>K</M>).
<P/>
This function was written by <B>Pablo Fernandez Ascariz</B>
<P/><B>Examples:</B> 
</Description>





















































































</ManSection>

<ManSection>

<Func Name="LeibnizComplex" Arg="X,n"/>
<Description>
<P/>

Inputs either a Lie or Leibniz algebra <M>X=A</M> (over the ring of 
integers <M>Z</M> or over a field <M>K</M>) 
or a homomorphism of Lie or Leibniz algebras 
<M>X=(f:A
\longrightarrow B)</M>, together with a positive integer 
<M>n</M>. It returns either the first <M>n</M> 
terms of the Leibniz chain complex 
<M>C(A)</M>, or the induced map of Leibniz complexes 
<M>C(f):C(A)
\longrightarrow C(B)</M>.
<P/>
(The Leibniz complex <M>C(A)</M>
was defined by J.-L.Loday. Its homology is by definition the Leibniz 
homology of the algebra <M>A</M>).
<P/>
This function was written by <B>Pablo Fernandez Ascariz</B>
<P/><B>Examples:</B> 
</Description>





















































































</ManSection>

<ManSection>

<Func Name="SuspendedChainComplex" Arg="C"/>
<Description>

<P/>
Inputs a  chain complex
 <M>C</M>
and returns the  chain complex  <M>S</M> defined by applying the degree shift
<M>S_n = C_{n-1}</M> to chain groups and boundary homomorphisms.
<P/><B>Examples:</B> 
</Description>





















































































</ManSection>

<ManSection>

<Func Name="ReducedSuspendedChainComplex" Arg="C"/>
<Description>

<P/>
Inputs a  chain complex
 <M>C</M>
and returns the  chain complex  <M>S</M> defined by applying the degree shift
<M>S_n = C_{n-1}</M> to chain groups and boundary homomorphisms for all <M>n > 0</M>. The chain complex <M>S</M> has trivial homology in degree <M>0</M> and   <M>S_0=\mathbb Z</M>. 
<P/><B>Examples:</B> 
</Description>





















































































</ManSection>

<ManSection>

<Func Name="CoreducedChainComplex" Arg="C"/>

<Func Name="CoreducedChainComplex" Arg="C,2"/>
<Description>

<P/>
Inputs a  chain complex
 <M>C</M>
and returns a quasi-isomorphic chain complex <M>D</M>. In many cases the complex <M>D</M> should be smaller than <M>C</M>. If an optional second input argument is set equal to 2 then an alternative method is used for
  reducing the size of the chain complex.
<P/><B>Examples:</B> <URL><Link>../www/SideLinks/About/aboutSimplicialGroups.html</Link><LinkText>1</LinkText></URL>&nbsp; 

</Description>





















































































</ManSection>

<ManSection>

<Func Name="TensorProductOfChainComplexes" Arg="C,D"/>
<Description>

<P/> Inputs two chain complexes <M>C</M> and <M>D</M> of the same characteristic and returns their tensor product as a chain complex.

<P/> This function was written by <B> Le Van Luyen</B>.
<P/><B>Examples:</B> <URL><Link>../www/SideLinks/About/aboutSimplicialGroups.html</Link><LinkText>1</LinkText></URL>&nbsp; 

</Description>





















































































</ManSection>

<ManSection>

<Func Name="LefschetzNumber" Arg="F"/>
<Description>

<P/>
Inputs a  chain map 
 <M>F\colon C\rightarrow C</M>
with common source and target. It returns the Lefschetz number of the map
 (that is, the alternating sum of the traces of the homology maps in each degree).
<P/><B>Examples:</B> 
</Description>





















































































</ManSection>

</Section>
</Chapter>

