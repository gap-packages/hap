gap> CH:=CohomologyModule(C,2);;
gap> Elts:=Elements(ActedGroup(CH));
[ &lt;identity> of ..., f1 ]

gap> x:=Elts[2];;
gap> c:=CH!.representativeCocycle(x);
Standard 2-cocycle 

gap> f:=Mapping(c);;
gap> for g in G do for h in G do
> Print(f(g,h),"\n");
> od;
> od;
&lt;identity> of ...
&lt;identity> of ...
&lt;identity> of ...
&lt;identity> of ...
&lt;identity> of ...
f6
&lt;identity> of ...
f6
&lt;identity> of ...
&lt;identity> of ...
&lt;identity> of ...
&lt;identity> of ...
&lt;identity> of ...
f6
&lt;identity> of ...
f6
